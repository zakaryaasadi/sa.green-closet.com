'use strict';var vuePropertyDecorator=require('vue-property-decorator');function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _initializerDefineProperty(target, property, descriptor, context) {
  if (!descriptor) return;
  Object.defineProperty(target, property, {
    enumerable: descriptor.enumerable,
    configurable: descriptor.configurable,
    writable: descriptor.writable,
    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
  });
}

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object.keys(descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object.defineProperty(target, property, desc);
    desc = null;
  }

  return desc;
}// Google Maps base URL
var baseURL = 'https://maps.googleapis.com/maps/api/js'; // Google Maps full URL with query parameters

var genURL = function genURL(options) {
  return "".concat(baseURL, "?").concat(options);
}; // All promises that need to be resolved once map is loaded


var promises = []; // onError callback for Google Maps fail

var onError = function onError(e) {
  return promises.forEach(function (p) {
    return p.reject(e);
  });
}; // onLoad callback for Google Maps load


var onLoad = function onLoad() {
  return promises.forEach(function (p) {
    return p.resolve(globalThis.google.maps);
  });
}; // Insert the Google Maps script into the DOM


var loadAPI = function loadAPI(options) {
  var script = document.createElement('script');
  script.type = 'text/javascript';
  script.src = genURL(options);

  script.onerror = function () {
    return onError(new Error('Error loading script'));
  };

  script.onload = function () {
    return onLoad();
  };

  var head = document.querySelector('head');
  if (head) head.appendChild(script);
}; // Convert options object into URI parameters


var uriX5OptionsInterface = function uriX5OptionsInterface(options) {
  return "key=".concat(options.key, "&libraries=").concat(options.libraries.join(','));
}; // Check if loaded


var loaded = function loaded() {
  return !!globalThis.google && !!globalThis.google.maps;
}; // Loading flag to allow for multiple inits


var loading = false; // Exported promise to get map

var gmaps = function gmaps() {
  // Early return if map already loaded
  if (loaded()) return Promise.resolve(globalThis.google.maps); // If not loading, it was not initialised

  if (!loading) throw new Error('x5GMaps :: Plugin not initialised'); // Return promise and save for resolution when map load completes

  return new Promise(function (resolve, reject) {
    return promises.push({
      resolve: resolve,
      reject: reject
    });
  });
}; // Exported initialisation


var init = function init(options) {
  // Early return if map already loaded
  if (loaded()) throw new Error('x5GMaps :: Plugin already initialised'); // Initiate map loading with given key, any options, and a promise resolve callback

  loadAPI(uriX5OptionsInterface(options)); // Map is still loading

  loading = true; // Give up if map takes too long

  setTimeout(function () {
    if (!loaded()) onError(new Error('Loading timed out'));
  }, 5000);
};var _dec$c, _dec2$c, _dec3$c, _dec4$c, _class$c, _class2$c, _descriptor$c, _descriptor2$c, _descriptor3$c;
var defaultOptions$1 = {
  center: {
    lat: -27.5,
    lng: 153
  },
  zoom: 12
};
var GmapsMap = (_dec$c = vuePropertyDecorator.Prop({
  default: function _default() {
    return {};
  }
}), _dec2$c = vuePropertyDecorator.Provide('getMap'), _dec3$c = vuePropertyDecorator.Provide('handleError'), _dec4$c = vuePropertyDecorator.Watch('options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$c = (_class2$c = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsMap, _Vue);

  var _super = _createSuper(GmapsMap);

  function GmapsMap() {
    var _this;

    _classCallCheck(this, GmapsMap);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsMap');

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor$c, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "error", null);

    _defineProperty(_assertThisInitialized(_this), "loading", true);

    _defineProperty(_assertThisInitialized(_this), "map", void 0);

    _initializerDefineProperty(_assertThisInitialized(_this), "provideMap", _descriptor2$c, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "handleError", _descriptor3$c, _assertThisInitialized(_this));

    return _this;
  }

  _createClass(GmapsMap, [{
    key: "getMap",
    value: function getMap() {
      if (this.map) return this.map;
      throw new Error('Map not found.');
    }
  }, {
    key: "_handleError",
    value: function _handleError(e) {
      this.error = e.message;
    }
  }, {
    key: "optionsChanged",
    value: function optionsChanged(newVal) {
      if (this.map) this.map.setOptions(newVal);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      gmaps().then(function (maps) {
        _this2.map = new maps.Map(_this2.$refs.gmap, _objectSpread2(_objectSpread2({}, defaultOptions$1), _this2.options));

        _this2.$emit('mounted', _this2.map);

        _this2.map.addListener('idle', function () {
          return _this2.$emit('idle', true);
        });

        _this2.map.addListener('bounds_changed', function () {
          return _this2.$emit('bounds-changed', _this2.map.getBounds());
        });

        _this2.map.addListener('center_changed', function () {
          return _this2.$emit('center-changed', _this2.map.getCenter());
        });

        _this2.map.addListener('click', function (e) {
          return _this2.$emit('click', e);
        });

        _this2.map.addListener('dblclick', function (e) {
          return _this2.$emit('double-click', e);
        });

        _this2.map.addListener('rightclick', function (e) {
          return _this2.$emit('right-click', e);
        });

        _this2.map.addListener('zoom_changed', function () {
          return _this2.$emit('zoom-changed', _this2.map.getZoom());
        }); // TODO: Remove in major release


        _this2.map.addListener('bounds_changed', function () {
          return _this2.$emit('boundsChanged', _this2.map.getBounds());
        }); // eslint-disable-line


        _this2.map.addListener('center_changed', function () {
          return _this2.$emit('centerChanged', _this2.map.getCenter());
        }); // eslint-disable-line


        _this2.map.addListener('dblclick', function (e) {
          return _this2.$emit('doubleClick', e);
        }); // eslint-disable-line


        _this2.map.addListener('rightclick', function (e) {
          return _this2.$emit('rightClick', e);
        }); // eslint-disable-line


        _this2.map.addListener('zoom_changed', function () {
          return _this2.$emit('zoomChanged', _this2.map.getZoom());
        }); // eslint-disable-line


        setTimeout(function () {
          return _this2.loading = false;
        }, 100);
      }).catch(function (e) {
        return _this2._handleError(e);
      });
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.map) globalThis.google.maps.event.clearInstanceListeners(this.map);
    }
  }]);

  return GmapsMap;
}(vuePropertyDecorator.Vue), (_descriptor$c = _applyDecoratedDescriptor(_class2$c.prototype, "options", [_dec$c], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$c = _applyDecoratedDescriptor(_class2$c.prototype, "provideMap", [_dec2$c], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    var _this3 = this;

    return function () {
      return _this3.getMap();
    };
  }
}), _descriptor3$c = _applyDecoratedDescriptor(_class2$c.prototype, "handleError", [_dec3$c], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    var _this4 = this;

    return function (e) {
      return _this4._handleError(e);
    };
  }
}), _applyDecoratedDescriptor(_class2$c.prototype, "optionsChanged", [_dec4$c], Object.getOwnPropertyDescriptor(_class2$c.prototype, "optionsChanged"), _class2$c.prototype)), _class2$c)) || _class$c);function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}function createInjectorSSR(context) {
    if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
    }
    if (!context)
        return () => { };
    if (!('styles' in context)) {
        context._styles = context._styles || {};
        Object.defineProperty(context, 'styles', {
            enumerable: true,
            get: () => context._renderStyles(context._styles)
        });
        context._renderStyles = context._renderStyles || renderStyles;
    }
    return (id, style) => addStyle(id, style, context);
}
function addStyle(id, css, context) {
    const group = css.media || 'default' ;
    const style = context._styles[group] || (context._styles[group] = { ids: [], css: '' });
    if (!style.ids.includes(id)) {
        style.media = css.media;
        style.ids.push(id);
        let code = css.source;
        style.css += code + '\n';
    }
}
function renderStyles(styles) {
    let css = '';
    for (const key in styles) {
        const style = styles[key];
        css +=
            '<style data-vue-ssr-id="' +
                Array.from(style.ids).join(' ') +
                '"' +
                (style.media ? ' media="' + style.media + '"' : '') +
                '>' +
                style.css +
                '</style>';
    }
    return css;
}/* script */
var __vue_script__$3 = GmapsMap;
/* template */

var __vue_render__$3 = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    staticClass: "gmaps-map"
  }, [_vm.error ? [_vm._t("error", function () {
    return [_c('span', {
      staticClass: "gmaps-error"
    }, [_vm._v("Error: " + _vm._s(_vm.error))])];
  }, {
    "error": _vm.error
  })] : _vm.loading ? [_vm._t("loading", function () {
    return [_c('span', {
      staticClass: "gmaps-spinner"
    })];
  })] : _vm._e(), _vm._ssrNode(" "), _vm._ssrNode("<div class=\"gmaps-map\"" + _vm._ssrStyle(null, null, {
    display: !_vm.error ? '' : 'none'
  }) + ">", "</div>", [!_vm.error && !_vm.loading && !!_vm.map ? _vm._t("default", null, {
    "map": _vm.map
  }) : _vm._e()], 2)], 2);
};

var __vue_staticRenderFns__$3 = [];
/* style */

var __vue_inject_styles__$3 = function __vue_inject_styles__(inject) {
  if (!inject) return;
  inject("data-v-cea96fac_0", {
    source: ".gmaps-map{position:relative;width:100%;height:100%}.gmaps-spinner{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.gmaps-spinner::after{content:\"\";display:inline-block;width:200px;height:200px;border:20px solid #ccc;border-radius:50%;border-top-color:#aaa;animation:gmaps-spin 1s ease-in-out infinite}.gmaps-error{position:absolute;top:50%;left:5%;width:90%;transform:translateY(-50%);color:#af0000;font-size:24px}@keyframes gmaps-spin{to{transform:rotate(360deg)}}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


var __vue_scope_id__$3 = undefined;
/* module identifier */

var __vue_module_identifier__$3 = "data-v-cea96fac";
/* functional template */

var __vue_is_functional_template__$3 = false;
/* style inject shadow dom */

var __vue_component__$3 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$3,
  staticRenderFns: __vue_staticRenderFns__$3
}, __vue_inject_styles__$3, __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, false, undefined, createInjectorSSR, undefined);var _dec$b, _dec2$b, _dec3$b, _dec4$b, _dec5$9, _dec6$7, _dec7$5, _dec8$5, _dec9$5, _dec10$4, _dec11$4, _dec12$4, _dec13$3, _dec14$3, _dec15$2, _dec16$1, _class$b, _class2$b, _descriptor$b, _descriptor2$b, _descriptor3$b, _descriptor4$7, _descriptor5$6, _descriptor6$5, _descriptor7$5, _descriptor8$5, _descriptor9$4, _descriptor10$4, _descriptor11$4, _descriptor12$3, _descriptor13$3, _descriptor14$2, _descriptor15$1;
var GmapsCircle = (_dec$b = vuePropertyDecorator.Inject('getMap'), _dec2$b = vuePropertyDecorator.Prop({
  default: 0.001
}), _dec3$b = vuePropertyDecorator.Prop({
  required: true
}), _dec4$b = vuePropertyDecorator.Prop({
  required: true
}), _dec5$9 = vuePropertyDecorator.Prop({
  default: true
}), _dec6$7 = vuePropertyDecorator.Prop({
  default: false
}), _dec7$5 = vuePropertyDecorator.Prop({
  default: false
}), _dec8$5 = vuePropertyDecorator.Prop({
  default: 'black'
}), _dec9$5 = vuePropertyDecorator.Prop({
  default: 0.3
}), _dec10$4 = vuePropertyDecorator.Prop({
  default: 'black'
}), _dec11$4 = vuePropertyDecorator.Prop({
  default: 1.0
}), _dec12$4 = vuePropertyDecorator.Prop({
  default: 0
}), _dec13$3 = vuePropertyDecorator.Prop({
  default: 3
}), _dec14$3 = vuePropertyDecorator.Prop({
  default: true
}), _dec15$2 = vuePropertyDecorator.Prop({
  default: 0
}), _dec16$1 = vuePropertyDecorator.Watch('_options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$b = (_class2$b = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsCircle, _Vue);

  var _super = _createSuper(GmapsCircle);

  function GmapsCircle() {
    var _this;

    _classCallCheck(this, GmapsCircle);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsCircle');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$b, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "sensitivity", _descriptor2$b, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "center", _descriptor3$b, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "radius", _descriptor4$7, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "clickable", _descriptor5$6, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "draggable", _descriptor6$5, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "editable", _descriptor7$5, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "fillColor", _descriptor8$5, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "fillOpacity", _descriptor9$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeColor", _descriptor10$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeOpacity", _descriptor11$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokePosition", _descriptor12$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeWeight", _descriptor13$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "visible", _descriptor14$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "zIndex", _descriptor15$1, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "circle", void 0);

    _defineProperty(_assertThisInitialized(_this), "tempCenter", _this.center);

    _defineProperty(_assertThisInitialized(_this), "tempRadius", +_this.radius);

    return _this;
  }

  _createClass(GmapsCircle, [{
    key: "_options",
    get: function get() {
      return {
        center: this.center,
        clickable: this.clickable,
        draggable: this.draggable,
        editable: this.editable,
        fillColor: this.fillColor,
        fillOpacity: +this.fillOpacity,
        radius: +this.radius,
        strokeColor: this.strokeColor,
        strokeOpacity: +this.strokeOpacity,
        strokePosition: +this.strokePosition,
        strokeWeight: +this.strokeWeight,
        visible: this.visible,
        zIndex: +this.zIndex
      };
    }
  }, {
    key: "_optionsChanged",
    value: function _optionsChanged(newVal) {
      if (this.circle) this.circle.setOptions(newVal);
    }
  }, {
    key: "changedCenter",
    value: function changedCenter() {
      if (!this.circle) return; // This is fired when the component is replaced and may not have a tempCenter

      var newCenter = this.circle.getCenter().toJSON();

      if (!this.tempCenter || Math.abs(newCenter.lat - this.tempCenter.lat) > this.sensitivity || Math.abs(newCenter.lng - this.tempCenter.lng) > this.sensitivity) {
        this.tempCenter = newCenter;
        this.$emit('center-changed', newCenter); // TODO: Remove in major release

        this.$emit('centerChanged', newCenter); // eslint-disable-line
      }
    }
  }, {
    key: "changedRadius",
    value: function changedRadius() {
      if (!this.circle) return; // This is fired when the component is replaced and may not have a tempCenter

      var newRadius = this.circle.getRadius();

      if (!this.tempRadius || Math.abs(newRadius - this.tempRadius) > 1) {
        this.tempRadius = newRadius;
        this.$emit('radius-changed', newRadius); // TODO: Remove in major release

        this.$emit('radiusChanged', newRadius); // eslint-disable-line
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      this.circle = new globalThis.google.maps.Circle(_objectSpread2({
        map: this.getMap()
      }, this._options));
      this.circle.addListener('center_changed', function () {
        return _this2.changedCenter();
      });
      this.circle.addListener('radius_changed', function () {
        return _this2.changedRadius();
      });
      this.circle.addListener('click', function (e) {
        return _this2.$emit('click', e);
      });
      this.circle.addListener('dblclick', function (e) {
        return _this2.$emit('double-click', e);
      });
      this.circle.addListener('drag', function (e) {
        return _this2.$emit('drag', e.latLng ? e.latLng.toJSON() : null);
      });
      this.circle.addListener('dragend', function (e) {
        return _this2.$emit('drag-end', e.latLng ? e.latLng.toJSON() : null);
      });
      this.circle.addListener('dragstart', function (e) {
        return _this2.$emit('drag-start', e.latLng ? e.latLng.toJSON() : null);
      });
      this.circle.addListener('mouseover', function (e) {
        return _this2.$emit('mouseover', e);
      });
      this.circle.addListener('rightclick', function (e) {
        return _this2.$emit('right-click', e);
      }); // TODO: Remove in major release

      this.circle.addListener('dblclick', function (e) {
        return _this2.$emit('doubleClick', e);
      }); // eslint-disable-line

      this.circle.addListener('dragend', function (e) {
        return _this2.$emit('dragEnd', e.latLng ? e.latLng.toJSON() : null);
      }); // eslint-disable-line

      this.circle.addListener('dragstart', function (e) {
        return _this2.$emit('dragStart', e.latLng ? e.latLng.toJSON() : null);
      }); // eslint-disable-line

      this.circle.addListener('rightclick', function (e) {
        return _this2.$emit('rightClick', e);
      }); // eslint-disable-line
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.circle) this.circle.setMap(null);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsCircle;
}(vuePropertyDecorator.Vue), (_descriptor$b = _applyDecoratedDescriptor(_class2$b.prototype, "getMap", [_dec$b], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$b = _applyDecoratedDescriptor(_class2$b.prototype, "sensitivity", [_dec2$b], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$b = _applyDecoratedDescriptor(_class2$b.prototype, "center", [_dec3$b], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4$7 = _applyDecoratedDescriptor(_class2$b.prototype, "radius", [_dec4$b], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor5$6 = _applyDecoratedDescriptor(_class2$b.prototype, "clickable", [_dec5$9], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor6$5 = _applyDecoratedDescriptor(_class2$b.prototype, "draggable", [_dec6$7], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor7$5 = _applyDecoratedDescriptor(_class2$b.prototype, "editable", [_dec7$5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor8$5 = _applyDecoratedDescriptor(_class2$b.prototype, "fillColor", [_dec8$5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor9$4 = _applyDecoratedDescriptor(_class2$b.prototype, "fillOpacity", [_dec9$5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor10$4 = _applyDecoratedDescriptor(_class2$b.prototype, "strokeColor", [_dec10$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor11$4 = _applyDecoratedDescriptor(_class2$b.prototype, "strokeOpacity", [_dec11$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor12$3 = _applyDecoratedDescriptor(_class2$b.prototype, "strokePosition", [_dec12$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor13$3 = _applyDecoratedDescriptor(_class2$b.prototype, "strokeWeight", [_dec13$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor14$2 = _applyDecoratedDescriptor(_class2$b.prototype, "visible", [_dec14$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor15$1 = _applyDecoratedDescriptor(_class2$b.prototype, "zIndex", [_dec15$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$b.prototype, "_optionsChanged", [_dec16$1], Object.getOwnPropertyDescriptor(_class2$b.prototype, "_optionsChanged"), _class2$b.prototype)), _class2$b)) || _class$b);var EXTEND = 0.1; // Get bounds

var getBounds = function getBounds(items) {
  var _bounds = new globalThis.google.maps.LatLngBounds(items[0], items[0]);

  items.forEach(function (e) {
    return _bounds.extend(e);
  });
  return _bounds;
}; // Get bounds

var extendBounds = function extendBounds(bounds) {
  var span = bounds.toSpan().toJSON();
  var north = Math.min(bounds.toJSON().north + EXTEND * span.lat, +89);
  var south = Math.max(bounds.toJSON().south - EXTEND * span.lat, -89);
  var west = Math.max(bounds.toJSON().west - EXTEND * span.lng, -180);
  var east = Math.min(bounds.toJSON().east + EXTEND * span.lng, +180);
  return new globalThis.google.maps.LatLngBounds(new globalThis.google.maps.LatLng({
    lat: south,
    lng: west
  }), new globalThis.google.maps.LatLng({
    lat: north,
    lng: east
  }));
};// https://developers.google.com/maps/documentation/javascript/examples/map-coordinates
var getMapTile = function getMapTile(pos, zoom, size) {
  var scale = 1 << zoom;
  var siny = Math.sin(pos.lat * Math.PI / 180);
  siny = Math.min(Math.max(siny, -0.9999), 0.9999);
  var x0 = 0.5 + pos.lng / 360;
  var y0 = 0.5 - Math.log((1 + siny) / (1 - siny)) / (4 * Math.PI);
  var x = Math.floor(x0 * scale / size);
  var y = Math.floor(y0 * scale / size);
  return {
    x: x,
    y: y
  };
}; // Get average position


var getAveragePosition = function getAveragePosition(items) {
  var _count = items.length;
  var _init = {
    lat: 0,
    lng: 0
  };

  var _posTot = items.reduce(function (acc, cur) {
    return {
      lat: acc.lat + cur.lat,
      lng: acc.lng + cur.lng
    };
  }, _init);

  var pos = {
    lat: _posTot.lat / _count,
    lng: _posTot.lng / _count
  };
  return pos;
}; // Get weight

var getWeight = function getWeight(cluster, total) {
  return Math.round(cluster / total * 100);
}; // Organise a given set of items into tiles of given size and appropriate for a given zoom


var organiseClusters = function organiseClusters(items, zoom, maxZoom, tileSize) {
  var result = {}; // If zoom exceeds maxZoom, do not cluster

  if (zoom >= maxZoom) {
    items.forEach(function (item, index) {
      result[index] = {
        pos: item,
        items: [item]
      };
    }); // Otherwise, cluster
  } else {
    // Cluster by tile
    items.forEach(function (item) {
      var tile = getMapTile(item, zoom, tileSize);
      var index = "".concat(zoom, "-").concat(tile.x, "-").concat(tile.y);
      if (!result[index]) result[index] = {
        pos: {
          lat: 0,
          lng: 0
        },
        items: []
      };
      result[index].items.push(item);
    }); // Set average positions and weights

    for (var _i = 0, _Object$entries = Object.entries(result); _i < _Object$entries.length; _i++) {
      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
          key = _Object$entries$_i[0],
          value = _Object$entries$_i[1];

      result[key].pos = getAveragePosition(value.items);
      result[key].weight = getWeight(value.items.length, items.length);
    }
  }

  return result;
};var _dec$a, _dec2$a, _dec3$a, _dec4$a, _dec5$8, _dec6$6, _dec7$4, _dec8$4, _dec9$4, _dec10$3, _dec11$3, _dec12$3, _class$a, _class2$a, _descriptor$a, _descriptor2$a, _descriptor3$a, _descriptor4$6, _descriptor5$5, _descriptor6$4, _descriptor7$4, _descriptor8$4, _descriptor9$3, _descriptor10$3, _descriptor11$3;
var GmapsMarker = (_dec$a = vuePropertyDecorator.Inject('getMap'), _dec2$a = vuePropertyDecorator.Inject('handleError'), _dec3$a = vuePropertyDecorator.Prop({
  default: function _default() {
    return {};
  }
}), _dec4$a = vuePropertyDecorator.Prop({
  default: 0.001
}), _dec5$8 = vuePropertyDecorator.Prop({
  default: true
}), _dec6$6 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec7$4 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec8$4 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec9$4 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec10$3 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec11$3 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec12$3 = vuePropertyDecorator.Watch('_options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$a = (_class2$a = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsMarker, _Vue);

  var _super = _createSuper(GmapsMarker);

  function GmapsMarker() {
    var _this;

    _classCallCheck(this, GmapsMarker);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsMarker');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$a, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "handleError", _descriptor2$a, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor3$a, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "sensitivity", _descriptor4$6, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "visible", _descriptor5$5, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "icon", _descriptor6$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "label", _descriptor7$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "opacity", _descriptor8$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "position", _descriptor9$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "title", _descriptor10$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "zIndex", _descriptor11$3, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "marker", void 0);

    return _this;
  }

  _createClass(GmapsMarker, [{
    key: "_options",
    get: function get() {
      var options = _objectSpread2({}, this.options);

      if (this.visible) options.visible = this.visible;
      if (this.icon) options.icon = this.icon;
      if (this.label) options.label = this.label;
      if (this.opacity) options.opacity = +this.opacity;
      if (this.position) options.position = this.position;
      if (this.title) options.title = this.title;
      if (this.zIndex) options.zIndex = +this.zIndex;
      return options;
    }
  }, {
    key: "_optionsChanged",
    value: function _optionsChanged(newVal) {
      if (this.marker) this.marker.setOptions(newVal);
    }
  }, {
    key: "changedPosition",
    value: function changedPosition() {
      var oldPosition = this._options.position; // This function is fired when a marker is replaced by Vue (and options is undefined)

      if (!oldPosition) return false;
      var newPosition = this.marker.getPosition().toJSON();
      return Math.abs(newPosition.lat - oldPosition.lat) > this.sensitivity || Math.abs(newPosition.lng - oldPosition.lng) > this.sensitivity ? newPosition : false;
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      // Early return for no position
      if (!this._options.position) return this.handleError(new Error('x5-gmaps: A position is required by every marker. Set this as either a position prop, or a position property of the options prop.'));
      this.marker = new globalThis.google.maps.Marker(_objectSpread2({
        map: this.getMap()
      }, this._options));
      this.marker.addListener('position_changed', function () {
        var position = _this2.changedPosition();

        if (position) {
          _this2.$emit('move', position); // Depreciated 19/04


          _this2.$emit('position-changed', position);
        }
      });
      this.marker.addListener('click', function (e) {
        return _this2.$emit('click', e);
      });
      this.marker.addListener('dblclick', function (e) {
        return _this2.$emit('double-click', e);
      });
      this.marker.addListener('rightclick', function (e) {
        return _this2.$emit('right-click', e);
      });
      this.marker.addListener('mouseover', function (e) {
        return _this2.$emit('mouseover', e);
      });
      this.marker.addListener('mouseout', function (e) {
        return _this2.$emit('mouseout', e);
      }); // TODO: Remove in major release

      this.marker.addListener('dblclick', function (e) {
        return _this2.$emit('doubleClick', e);
      }); // eslint-disable-line

      this.marker.addListener('rightclick', function (e) {
        return _this2.$emit('rightClick', e);
      }); // eslint-disable-line
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.marker) google.maps.event.clearInstanceListeners(this.marker);
      if (this.marker) this.marker.setMap(null);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsMarker;
}(vuePropertyDecorator.Vue), (_descriptor$a = _applyDecoratedDescriptor(_class2$a.prototype, "getMap", [_dec$a], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$a = _applyDecoratedDescriptor(_class2$a.prototype, "handleError", [_dec2$a], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$a = _applyDecoratedDescriptor(_class2$a.prototype, "options", [_dec3$a], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4$6 = _applyDecoratedDescriptor(_class2$a.prototype, "sensitivity", [_dec4$a], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor5$5 = _applyDecoratedDescriptor(_class2$a.prototype, "visible", [_dec5$8], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor6$4 = _applyDecoratedDescriptor(_class2$a.prototype, "icon", [_dec6$6], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor7$4 = _applyDecoratedDescriptor(_class2$a.prototype, "label", [_dec7$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor8$4 = _applyDecoratedDescriptor(_class2$a.prototype, "opacity", [_dec8$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor9$3 = _applyDecoratedDescriptor(_class2$a.prototype, "position", [_dec9$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor10$3 = _applyDecoratedDescriptor(_class2$a.prototype, "title", [_dec10$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor11$3 = _applyDecoratedDescriptor(_class2$a.prototype, "zIndex", [_dec11$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$a.prototype, "_optionsChanged", [_dec12$3], Object.getOwnPropertyDescriptor(_class2$a.prototype, "_optionsChanged"), _class2$a.prototype)), _class2$a)) || _class$a);// TODO: Can't figure out the type vs class definition here
var createPopupClass = function createPopupClass() {
  /**
   * A customized popup on the map.
   */
  return /*#__PURE__*/function (_google$maps$OverlayV) {
    _inherits(Popup, _google$maps$OverlayV);

    var _super = _createSuper(Popup);

    function Popup(position, content) {
      var _this;

      _classCallCheck(this, Popup);

      _this = _super.call(this);

      _defineProperty(_assertThisInitialized(_this), "position", void 0);

      _defineProperty(_assertThisInitialized(_this), "content", void 0);

      _this.position = new globalThis.google.maps.LatLng(position);
      _this.content = content; // Optionally stop clicks, etc., from bubbling up to the map.

      Popup.preventMapHitsAndGesturesFrom(_this.content);
      return _this;
    }
    /** Called when the popup is added to the map. */


    _createClass(Popup, [{
      key: "onAdd",
      value: function onAdd() {
        var panes = this.getPanes();
        this.content.addEventListener('touchstart', function () {
          return null;
        }, {
          passive: true
        });
        this.content.addEventListener('touchmove', function () {
          return null;
        }, {
          passive: true
        });
        if (panes) panes.floatPane.appendChild(this.content);
      }
      /** Called when the popup is removed from the map. */

    }, {
      key: "onRemove",
      value: function onRemove() {
        if (this.content.parentElement) this.content.parentElement.removeChild(this.content);
      }
      /** Called each frame when the popup needs to draw itself. */
      // TODO: This is called soooo much

    }, {
      key: "draw",
      value: function draw() {
        var projection = this.getProjection();
        if (!projection) return this.onRemove();
        var divPosition = projection.fromLatLngToDivPixel(this.position); // Hide the popup when it is far out of view.
        // TODO: Make this a prop

        var display = divPosition && Math.abs(divPosition.x) < 4000 && Math.abs(divPosition.y) < 4000 ? 'block' : 'none';

        if (display === 'block') {
          this.content.style.left = divPosition.x + 'px';
          this.content.style.top = divPosition.y + 'px';
        }

        if (this.content.style.display !== display) {
          this.content.style.display = display;
        }
      } // Custom

    }, {
      key: "setPosition",
      value: function setPosition(position) {
        this.position = new globalThis.google.maps.LatLng(position);
        this.draw();
      }
    }]);

    return Popup;
  }(google.maps.OverlayView);
};var _dec$9, _dec2$9, _dec3$9, _dec4$9, _dec5$7, _class$9, _class2$9, _descriptor$9, _descriptor2$9, _descriptor3$9, _descriptor4$5;
var GmapsClusterPin = (_dec$9 = vuePropertyDecorator.Inject('getMap'), _dec2$9 = vuePropertyDecorator.Prop({
  required: true
}), _dec3$9 = vuePropertyDecorator.Prop({
  required: true
}), _dec4$9 = vuePropertyDecorator.Prop({
  default: '#EEEEEE'
}), _dec5$7 = vuePropertyDecorator.Watch('position', {
  deep: true
}), vuePropertyDecorator.Component(_class$9 = (_class2$9 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsClusterPin, _Vue);

  var _super = _createSuper(GmapsClusterPin);

  function GmapsClusterPin() {
    var _this;

    _classCallCheck(this, GmapsClusterPin);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsClusterPin');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$9, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "position", _descriptor2$9, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "count", _descriptor3$9, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "background", _descriptor4$5, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "popup", void 0);

    return _this;
  }

  _createClass(GmapsClusterPin, [{
    key: "positionChanged",
    value: function positionChanged(newVal) {
      if (this.popup) this.popup.setPosition(newVal);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var Popup = createPopupClass();
      this.popup = new Popup(this.position, this.$el);
      if (this.popup) this.popup.setMap(this.getMap());
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.popup) this.popup.setMap(null);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsClusterPin;
}(vuePropertyDecorator.Vue), (_descriptor$9 = _applyDecoratedDescriptor(_class2$9.prototype, "getMap", [_dec$9], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$9 = _applyDecoratedDescriptor(_class2$9.prototype, "position", [_dec2$9], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$9 = _applyDecoratedDescriptor(_class2$9.prototype, "count", [_dec3$9], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4$5 = _applyDecoratedDescriptor(_class2$9.prototype, "background", [_dec4$9], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$9.prototype, "positionChanged", [_dec5$7], Object.getOwnPropertyDescriptor(_class2$9.prototype, "positionChanged"), _class2$9.prototype)), _class2$9)) || _class$9);/* script */
var __vue_script__$2 = GmapsClusterPin;
/* template */

var __vue_render__$2 = function __vue_render__() {
  var _obj;

  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    staticClass: "gmaps-cluster-pin",
    on: {
      "click": function click($event) {
        $event.preventDefault();
        return _vm.$emit('click');
      }
    }
  }, [_vm._ssrNode("<div class=\"gmaps-cluster-center\"" + _vm._ssrStyle(null, (_obj = {}, _obj['--background'] = _vm.background, _obj), null) + "><span>" + _vm._ssrEscape("\n      " + _vm._s(_vm.count) + "\n    ") + "</span></div>")]);
};

var __vue_staticRenderFns__$2 = [];
/* style */

var __vue_inject_styles__$2 = function __vue_inject_styles__(inject) {
  if (!inject) return;
  inject("data-v-4973b532_0", {
    source: ".gmaps-cluster-center{color:#444;cursor:pointer;font-family:sans-serif;font-size:18px;left:0;overflow-y:auto;padding:5px;position:absolute;text-align:center;vertical-align:middle;top:0;transform:translate(-50%,-100%);min-width:40px;border-radius:50%;background-color:var(--background);box-shadow:0 0 10px 10px var(--background);pointer-events:all}.gmaps-cluster-pin{pointer-events:none;cursor:auto;height:0;position:absolute;width:100%}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


var __vue_scope_id__$2 = undefined;
/* module identifier */

var __vue_module_identifier__$2 = "data-v-4973b532";
/* functional template */

var __vue_is_functional_template__$2 = false;
/* style inject shadow dom */

var __vue_component__$2 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$2,
  staticRenderFns: __vue_staticRenderFns__$2
}, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, false, undefined, createInjectorSSR, undefined);var _dec$8, _dec2$8, _dec3$8, _dec4$8, _dec5$6, _dec6$5, _class$8, _class2$8, _descriptor$8, _descriptor2$8, _descriptor3$8;
var defaultOptions = {
  minZoom: -1,
  maxZoom: 8,
  tileSize: 0.4,
  // TODO: Seems to break the click to zoom above this number??
  highPercentage: 10,
  lowPercentage: 3
};
var GmapsCluster = (_dec$8 = vuePropertyDecorator.Component({
  components: {
    gmapsMarker: GmapsMarker,
    gmapsClusterPin: __vue_component__$2
  }
}), _dec2$8 = vuePropertyDecorator.Inject('getMap'), _dec3$8 = vuePropertyDecorator.Prop({
  required: true
}), _dec4$8 = vuePropertyDecorator.Prop({
  default: function _default() {
    return {};
  }
}), _dec5$6 = vuePropertyDecorator.Watch('options', {
  immediate: true
}), _dec6$5 = vuePropertyDecorator.Watch('items', {
  immediate: true
}), _dec$8(_class$8 = (_class2$8 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsCluster, _Vue);

  var _super = _createSuper(GmapsCluster);

  function GmapsCluster() {
    var _this;

    _classCallCheck(this, GmapsCluster);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsCluster');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$8, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "items", _descriptor2$8, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor3$8, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "clusterOptions", _objectSpread2({}, defaultOptions));

    _defineProperty(_assertThisInitialized(_this), "eventListener", []);

    _defineProperty(_assertThisInitialized(_this), "all", {});

    _defineProperty(_assertThisInitialized(_this), "clusters", {});

    _defineProperty(_assertThisInitialized(_this), "clustered", false);

    return _this;
  }

  _createClass(GmapsCluster, [{
    key: "optionsChanged",
    value: function optionsChanged(newOptions) {
      this.clusterOptions = _objectSpread2(_objectSpread2({}, defaultOptions), newOptions);
      this.handleZoom();
      this.handlePan();
    }
  }, {
    key: "itemsChanged",
    value: function itemsChanged() {
      this.handleZoom();
      this.handlePan();
    }
  }, {
    key: "handlePan",
    value: function handlePan() {
      var _bounds = extendBounds(this.getMap().getBounds());

      var _filtered = {};

      var _rand = Math.floor(Math.random() * 10000);

      for (var _i = 0, _Object$entries = Object.entries(this.all); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
            key = _Object$entries$_i[0],
            value = _Object$entries$_i[1];

        if (_bounds !== null && _bounds !== void 0 && _bounds.contains(value.pos)) _filtered["".concat(key, "-").concat(_rand)] = value;
      }

      this.clusters = _filtered;
    }
  }, {
    key: "handleZoom",
    value: function handleZoom() {
      var _zoom = this.getMap().getZoom();

      this.all = organiseClusters(this.items, Math.max(_zoom, this.clusterOptions.minZoom), this.clusterOptions.maxZoom, this.clusterOptions.tileSize);
    }
  }, {
    key: "getColor",
    value: function getColor(weight) {
      if (!this.clusterOptions.highPercentage && !this.clusterOptions.lowPercentage) return;
      if (this.clusterOptions.highPercentage && weight >= this.clusterOptions.highPercentage) return '#FBB3BD';
      if (this.clusterOptions.lowPercentage && weight <= this.clusterOptions.lowPercentage) return '#CCF1FF';
      return '#F1E0B0';
    }
  }, {
    key: "clusterClickHandler",
    value: function clusterClickHandler(key) {
      var _clusterBounds = getBounds(this.clusters[key].items);

      this.getMap().fitBounds(_clusterBounds);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      this.handleZoom();
      this.eventListener.push(this.getMap().addListener('idle', function () {
        return _this2.handlePan();
      }), this.getMap().addListener('zoom_changed', function () {
        return _this2.handleZoom();
      }));
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.eventListener.length) this.eventListener.forEach(function (e) {
        return e.remove();
      });
    }
  }]);

  return GmapsCluster;
}(vuePropertyDecorator.Vue), (_descriptor$8 = _applyDecoratedDescriptor(_class2$8.prototype, "getMap", [_dec2$8], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$8 = _applyDecoratedDescriptor(_class2$8.prototype, "items", [_dec3$8], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$8 = _applyDecoratedDescriptor(_class2$8.prototype, "options", [_dec4$8], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$8.prototype, "optionsChanged", [_dec5$6], Object.getOwnPropertyDescriptor(_class2$8.prototype, "optionsChanged"), _class2$8.prototype), _applyDecoratedDescriptor(_class2$8.prototype, "itemsChanged", [_dec6$5], Object.getOwnPropertyDescriptor(_class2$8.prototype, "itemsChanged"), _class2$8.prototype)), _class2$8)) || _class$8);/* script */
var __vue_script__$1 = GmapsCluster;
/* template */

var __vue_render__$1 = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', [_vm._l(_vm.clusters, function (ref, key) {
    var pos = ref.pos;
    var items = ref.items;
    var weight = ref.weight;
    return [items.length > 1 ? _c('gmaps-cluster-pin', {
      key: "c-" + key,
      attrs: {
        "count": items.length,
        "position": pos,
        "background": _vm.getColor(weight)
      },
      on: {
        "click": function click($event) {
          return _vm.clusterClickHandler(key);
        }
      }
    }) : _c('gmaps-marker', {
      key: "m-" + key,
      attrs: {
        "position": pos,
        "title": items[0].title || items[0].id,
        "visible": items[0].visible,
        "icon": items[0].icon,
        "label": items[0].label,
        "opacity": items[0].opacity,
        "z-index": items[0].zIndex,
        "options": items[0].options
      },
      on: {
        "click": function click($event) {
          return _vm.$emit('click', items[0].id || $event);
        }
      }
    })];
  })], 2);
};

var __vue_staticRenderFns__$1 = [];
/* style */

var __vue_inject_styles__$1 = undefined;
/* scoped */

var __vue_scope_id__$1 = undefined;
/* module identifier */

var __vue_module_identifier__$1 = "data-v-8f74d204";
/* functional template */

var __vue_is_functional_template__$1 = false;
/* style inject */

/* style inject SSR */

/* style inject shadow dom */

var __vue_component__$1 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$1,
  staticRenderFns: __vue_staticRenderFns__$1
}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, false, undefined, undefined, undefined);var _dec$7, _dec2$7, _dec3$7, _dec4$7, _class$7, _class2$7, _descriptor$7, _descriptor2$7, _descriptor3$7;
var GmapsData = (_dec$7 = vuePropertyDecorator.Inject('getMap'), _dec2$7 = vuePropertyDecorator.Inject('handleError'), _dec3$7 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec4$7 = vuePropertyDecorator.Watch('options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$7 = (_class2$7 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsData, _Vue);

  var _super = _createSuper(GmapsData);

  function GmapsData() {
    var _this;

    _classCallCheck(this, GmapsData);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsData');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$7, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "handleError", _descriptor2$7, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor3$7, _assertThisInitialized(_this));

    return _this;
  }

  _createClass(GmapsData, [{
    key: "optionsChanged",
    value: function optionsChanged(newVal) {
      this.getMap().data.setStyle(newVal);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      // NOTE: This is to enforce only one GmapsData element per map
      if (this.getMap().data.getFeatureById('_gmapsDataCollection')) return this.handleError(new Error('There can only be one GmapsData element per GmapsMap. Use GmapsDataGeoJson elements to add more GeoJSON data.'));
      this.getMap().data.add(new globalThis.google.maps.Data.Feature({
        id: '_gmapsDataCollection'
      })); // NOTE: Events occur on the whole data object, not individual features

      this.getMap().data.addListener('click', function (e) {
        return _this2.$emit('click', e);
      });
      this.getMap().data.addListener('contextmenu', function (e) {
        return _this2.$emit('contextmenu', e);
      });
      this.getMap().data.addListener('dblclick', function (e) {
        return _this2.$emit('dblclick', e);
      });
      this.getMap().data.addListener('mousedown', function (e) {
        return _this2.$emit('mousedown', e);
      });
      this.getMap().data.addListener('mouseout', function (e) {
        return _this2.$emit('mouseout', e);
      });
      this.getMap().data.addListener('mouseover', function (e) {
        return _this2.$emit('mouseover', e);
      });
      this.getMap().data.addListener('mouseup', function (e) {
        return _this2.$emit('mouseup', e);
      });
      this.getMap().data.addListener('rightclick', function (e) {
        return _this2.$emit('rightclick', e);
      });
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      var mainFeature = this.getMap().data.getFeatureById('_gmapsDataCollection');
      if (mainFeature) this.getMap().data.remove(mainFeature);
    }
  }, {
    key: "render",
    value: function render(h) {
      return h('div', this.$slots.default);
    }
  }]);

  return GmapsData;
}(vuePropertyDecorator.Vue), (_descriptor$7 = _applyDecoratedDescriptor(_class2$7.prototype, "getMap", [_dec$7], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$7 = _applyDecoratedDescriptor(_class2$7.prototype, "handleError", [_dec2$7], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$7 = _applyDecoratedDescriptor(_class2$7.prototype, "options", [_dec3$7], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$7.prototype, "optionsChanged", [_dec4$7], Object.getOwnPropertyDescriptor(_class2$7.prototype, "optionsChanged"), _class2$7.prototype)), _class2$7)) || _class$7);var _dec$6, _dec2$6, _dec3$6, _dec4$6, _dec5$5, _class$6, _class2$6, _descriptor$6, _descriptor2$6, _descriptor3$6;
var GmapsDataGeoJson = (_dec$6 = vuePropertyDecorator.Inject('getMap'), _dec2$6 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec3$6 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec4$6 = vuePropertyDecorator.Watch('geoJson', {
  immediate: true,
  deep: true
}), _dec5$5 = vuePropertyDecorator.Watch('styleOptions', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$6 = (_class2$6 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsDataGeoJson, _Vue);

  var _super = _createSuper(GmapsDataGeoJson);

  function GmapsDataGeoJson() {
    var _this;

    _classCallCheck(this, GmapsDataGeoJson);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsDataGeoJson');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$6, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor2$6, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "geoJson", _descriptor3$6, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "features", []);

    return _this;
  }

  _createClass(GmapsDataGeoJson, [{
    key: "updateGeoJson",
    value: function updateGeoJson() {
      // Clear feature list
      this.clear();
      if (!this.geoJson) return; // Add whatever was given and store returned features

      this.features = this.getMap().data.addGeoJson(this.geoJson);
      this.updateStyles();
    }
  }, {
    key: "updateStyles",
    value: function updateStyles() {
      var _this2 = this;

      this.features.forEach(function (e) {
        return _this2.getMap().data.overrideStyle(e, _this2.options);
      });
    }
  }, {
    key: "clear",
    value: function clear() {
      var _this3 = this;

      // TODO: Test whether this function can handle removing non-existent features
      this.features.forEach(function (e) {
        return _this3.getMap().data.remove(e);
      });
    }
  }, {
    key: "_geoJsonChanged",
    value: function _geoJsonChanged() {
      this.updateGeoJson();
    }
  }, {
    key: "_styleOptionsChanged",
    value: function _styleOptionsChanged() {
      this.updateStyles();
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.updateGeoJson();
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      this.clear();
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsDataGeoJson;
}(vuePropertyDecorator.Vue), (_descriptor$6 = _applyDecoratedDescriptor(_class2$6.prototype, "getMap", [_dec$6], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$6 = _applyDecoratedDescriptor(_class2$6.prototype, "options", [_dec2$6], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$6 = _applyDecoratedDescriptor(_class2$6.prototype, "geoJson", [_dec3$6], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$6.prototype, "_geoJsonChanged", [_dec4$6], Object.getOwnPropertyDescriptor(_class2$6.prototype, "_geoJsonChanged"), _class2$6.prototype), _applyDecoratedDescriptor(_class2$6.prototype, "_styleOptionsChanged", [_dec5$5], Object.getOwnPropertyDescriptor(_class2$6.prototype, "_styleOptionsChanged"), _class2$6.prototype)), _class2$6)) || _class$6);var _dec$5, _dec2$5, _dec3$5, _dec4$5, _class$5, _class2$5, _descriptor$5, _descriptor2$5, _descriptor3$5;
var GmapsInfoWindow = (_dec$5 = vuePropertyDecorator.Inject('getMap'), _dec2$5 = vuePropertyDecorator.Inject('handleError'), _dec3$5 = vuePropertyDecorator.Prop({
  default: function _default() {
    return {};
  }
}), _dec4$5 = vuePropertyDecorator.Watch('options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$5 = (_class2$5 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsInfoWindow, _Vue);

  var _super = _createSuper(GmapsInfoWindow);

  function GmapsInfoWindow() {
    var _this;

    _classCallCheck(this, GmapsInfoWindow);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsInfoWindow');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$5, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "handleError", _descriptor2$5, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor3$5, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "infoW", void 0);

    return _this;
  }

  _createClass(GmapsInfoWindow, [{
    key: "open",
    value: function open() {
      if (this.infoW) this.infoW.open(this.getMap());
    }
  }, {
    key: "optionsChanged",
    value: function optionsChanged(newVal) {
      if (this.infoW) this.infoW.setOptions(newVal);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      if (!this.options.position) return this.handleError(new Error('InfoWindow options require a position property.'));
      this.infoW = new globalThis.google.maps.InfoWindow(_objectSpread2({
        content: this.$el
      }, this.options));
      this.infoW.addListener('closeclick', function () {
        return _this2.$emit('closed');
      });
      this.open();
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.infoW) this.infoW.close();
      if (this.infoW) globalThis.google.maps.event.clearInstanceListeners(this.infoW);
    }
  }, {
    key: "render",
    value: function render(h) {
      return h('div', this.$slots.default);
    }
  }]);

  return GmapsInfoWindow;
}(vuePropertyDecorator.Vue), (_descriptor$5 = _applyDecoratedDescriptor(_class2$5.prototype, "getMap", [_dec$5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$5 = _applyDecoratedDescriptor(_class2$5.prototype, "handleError", [_dec2$5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$5 = _applyDecoratedDescriptor(_class2$5.prototype, "options", [_dec3$5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$5.prototype, "optionsChanged", [_dec4$5], Object.getOwnPropertyDescriptor(_class2$5.prototype, "optionsChanged"), _class2$5.prototype)), _class2$5)) || _class$5);var _dec$4, _dec2$4, _dec3$4, _dec4$4, _dec5$4, _dec6$4, _dec7$3, _dec8$3, _dec9$3, _dec10$2, _dec11$2, _dec12$2, _dec13$2, _dec14$2, _dec15$1, _dec16, _class$4, _class2$4, _descriptor$4, _descriptor2$4, _descriptor3$4, _descriptor4$4, _descriptor5$4, _descriptor6$3, _descriptor7$3, _descriptor8$3, _descriptor9$2, _descriptor10$2, _descriptor11$2, _descriptor12$2, _descriptor13$2, _descriptor14$1, _descriptor15;
var GmapsPolygon = (_dec$4 = vuePropertyDecorator.Inject('getMap'), _dec2$4 = vuePropertyDecorator.Prop({
  default: function _default() {
    return {};
  }
}), _dec3$4 = vuePropertyDecorator.Prop({
  default: true
}), _dec4$4 = vuePropertyDecorator.Prop({
  default: false
}), _dec5$4 = vuePropertyDecorator.Prop({
  default: false
}), _dec6$4 = vuePropertyDecorator.Prop({
  default: 'black'
}), _dec7$3 = vuePropertyDecorator.Prop({
  default: 0.3
}), _dec8$3 = vuePropertyDecorator.Prop({
  default: false
}), _dec9$3 = vuePropertyDecorator.Prop({
  required: true
}), _dec10$2 = vuePropertyDecorator.Prop({
  default: 'black'
}), _dec11$2 = vuePropertyDecorator.Prop({
  default: 1.0
}), _dec12$2 = vuePropertyDecorator.Prop({
  default: 0
}), _dec13$2 = vuePropertyDecorator.Prop({
  default: 3
}), _dec14$2 = vuePropertyDecorator.Prop({
  default: true
}), _dec15$1 = vuePropertyDecorator.Prop({
  default: 0
}), _dec16 = vuePropertyDecorator.Watch('_options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$4 = (_class2$4 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsPolygon, _Vue);

  var _super = _createSuper(GmapsPolygon);

  function GmapsPolygon() {
    var _this;

    _classCallCheck(this, GmapsPolygon);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsPolygon');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor2$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "clickable", _descriptor3$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "draggable", _descriptor4$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "editable", _descriptor5$4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "fillColor", _descriptor6$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "fillOpacity", _descriptor7$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "geodesic", _descriptor8$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "path", _descriptor9$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeColor", _descriptor10$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeOpacity", _descriptor11$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokePosition", _descriptor12$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeWeight", _descriptor13$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "visible", _descriptor14$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "zIndex", _descriptor15, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "polygon", void 0);

    return _this;
  }

  _createClass(GmapsPolygon, [{
    key: "_options",
    get: function get() {
      var options = _objectSpread2(_objectSpread2({}, this.options), {}, {
        geodesic: this.geodesic,
        paths: [this.path],
        clickable: this.clickable,
        draggable: this.draggable,
        editable: this.editable,
        fillColor: this.fillColor,
        fillOpacity: +this.fillOpacity,
        strokeColor: this.strokeColor,
        strokeOpacity: +this.strokeOpacity,
        strokePosition: +this.strokePosition,
        strokeWeight: +this.strokeWeight,
        visible: this.visible,
        zIndex: +this.zIndex
      });

      return options;
    }
  }, {
    key: "_optionsChanged",
    value: function _optionsChanged(newVal) {
      if (this.polygon) this.polygon.setOptions(newVal);
    }
  }, {
    key: "changedPath",
    value: function changedPath() {
      if (this.polygon && (this.polygon.getEditable() || this.polygon.getDraggable())) {
        var result = this.polygon.getPath().getArray().map(function (e) {
          return e.toJSON();
        });
        this.polygon.setPath(result);
        this.$emit('path-changed', result); // TODO: Remove in major release

        this.$emit('pathChanged', result); // eslint-disable-line
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      this.polygon = new globalThis.google.maps.Polygon(_objectSpread2({
        map: this.getMap()
      }, this._options));
      this.polygon.addListener('click', function (e) {
        return _this2.$emit('click', e);
      });
      this.polygon.addListener('dblclick', function (e) {
        return _this2.$emit('double-click', e);
      });
      this.polygon.addListener('dragend', function (e) {
        return _this2.$emit('drag-end', e);
      });
      this.polygon.addListener('dragstart', function (e) {
        return _this2.$emit('drag-start', e);
      });
      this.polygon.addListener('rightclick', function (e) {
        return _this2.$emit('right-click', e);
      }); // NOTE: path events insert_at and set_at only fired once so mouse up was more reliable (but mouse up doesn't trigger for remove event)

      this.polygon.addListener('mouseup', function () {
        return _this2.changedPath();
      });
      this.polygon.getPath().addListener('remove_at', function () {
        return _this2.changedPath();
      }); // TODO: Remove in major release

      this.polygon.addListener('dblclick', function (e) {
        return _this2.$emit('doubleClick', e);
      }); // eslint-disable-line

      this.polygon.addListener('dragend', function (e) {
        return _this2.$emit('dragEnd', e);
      }); // eslint-disable-line

      this.polygon.addListener('dragstart', function (e) {
        return _this2.$emit('dragStart', e);
      }); // eslint-disable-line

      this.polygon.addListener('rightclick', function (e) {
        return _this2.$emit('rightClick', e);
      }); // eslint-disable-line
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.polygon) this.polygon.setMap(null);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsPolygon;
}(vuePropertyDecorator.Vue), (_descriptor$4 = _applyDecoratedDescriptor(_class2$4.prototype, "getMap", [_dec$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$4 = _applyDecoratedDescriptor(_class2$4.prototype, "options", [_dec2$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$4 = _applyDecoratedDescriptor(_class2$4.prototype, "clickable", [_dec3$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4$4 = _applyDecoratedDescriptor(_class2$4.prototype, "draggable", [_dec4$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor5$4 = _applyDecoratedDescriptor(_class2$4.prototype, "editable", [_dec5$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor6$3 = _applyDecoratedDescriptor(_class2$4.prototype, "fillColor", [_dec6$4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor7$3 = _applyDecoratedDescriptor(_class2$4.prototype, "fillOpacity", [_dec7$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor8$3 = _applyDecoratedDescriptor(_class2$4.prototype, "geodesic", [_dec8$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor9$2 = _applyDecoratedDescriptor(_class2$4.prototype, "path", [_dec9$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor10$2 = _applyDecoratedDescriptor(_class2$4.prototype, "strokeColor", [_dec10$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor11$2 = _applyDecoratedDescriptor(_class2$4.prototype, "strokeOpacity", [_dec11$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor12$2 = _applyDecoratedDescriptor(_class2$4.prototype, "strokePosition", [_dec12$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor13$2 = _applyDecoratedDescriptor(_class2$4.prototype, "strokeWeight", [_dec13$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor14$1 = _applyDecoratedDescriptor(_class2$4.prototype, "visible", [_dec14$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor15 = _applyDecoratedDescriptor(_class2$4.prototype, "zIndex", [_dec15$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$4.prototype, "_optionsChanged", [_dec16], Object.getOwnPropertyDescriptor(_class2$4.prototype, "_optionsChanged"), _class2$4.prototype)), _class2$4)) || _class$4);var _dec$3, _dec2$3, _dec3$3, _dec4$3, _dec5$3, _dec6$3, _dec7$2, _dec8$2, _dec9$2, _dec10$1, _dec11$1, _dec12$1, _dec13$1, _dec14$1, _class$3, _class2$3, _descriptor$3, _descriptor2$3, _descriptor3$3, _descriptor4$3, _descriptor5$3, _descriptor6$2, _descriptor7$2, _descriptor8$2, _descriptor9$1, _descriptor10$1, _descriptor11$1, _descriptor12$1, _descriptor13$1;
var GmapsPolyline = (_dec$3 = vuePropertyDecorator.Inject('getMap'), _dec2$3 = vuePropertyDecorator.Prop({
  default: function _default() {
    return {};
  }
}), _dec3$3 = vuePropertyDecorator.Prop({
  default: true
}), _dec4$3 = vuePropertyDecorator.Prop({
  default: false
}), _dec5$3 = vuePropertyDecorator.Prop({
  default: false
}), _dec6$3 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec7$2 = vuePropertyDecorator.Prop({
  default: false
}), _dec8$2 = vuePropertyDecorator.Prop({
  required: true
}), _dec9$2 = vuePropertyDecorator.Prop({
  default: 'black'
}), _dec10$1 = vuePropertyDecorator.Prop({
  default: 1.0
}), _dec11$1 = vuePropertyDecorator.Prop({
  default: 3
}), _dec12$1 = vuePropertyDecorator.Prop({
  default: true
}), _dec13$1 = vuePropertyDecorator.Prop({
  default: 0
}), _dec14$1 = vuePropertyDecorator.Watch('_options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$3 = (_class2$3 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsPolyline, _Vue);

  var _super = _createSuper(GmapsPolyline);

  function GmapsPolyline() {
    var _this;

    _classCallCheck(this, GmapsPolyline);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsPolyline');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "options", _descriptor2$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "clickable", _descriptor3$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "draggable", _descriptor4$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "editable", _descriptor5$3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "icons", _descriptor6$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "geodesic", _descriptor7$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "path", _descriptor8$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeColor", _descriptor9$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeOpacity", _descriptor10$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeWeight", _descriptor11$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "visible", _descriptor12$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "zIndex", _descriptor13$1, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "polyline", void 0);

    return _this;
  }

  _createClass(GmapsPolyline, [{
    key: "_options",
    get: function get() {
      var options = _objectSpread2(_objectSpread2({}, this.options), {}, {
        geodesic: this.geodesic,
        path: this.path,
        clickable: this.clickable,
        draggable: this.draggable,
        editable: this.editable,
        strokeColor: this.strokeColor,
        strokeOpacity: +this.strokeOpacity,
        strokeWeight: +this.strokeWeight,
        visible: this.visible,
        zIndex: +this.zIndex
      });

      if (this.icons) options.icons = this.icons;
      return options;
    }
  }, {
    key: "_optionsChanged",
    value: function _optionsChanged(newVal) {
      if (this.polyline) this.polyline.setOptions(newVal);
    }
  }, {
    key: "changedPath",
    value: function changedPath() {
      if (this.polyline && (this.polyline.getEditable() || this.polyline.getDraggable())) {
        var result = this.polyline.getPath().getArray().map(function (e) {
          return e.toJSON();
        });
        this.polyline.setPath(result);
        this.$emit('path-changed', result); // TODO: Remove in major release

        this.$emit('pathChanged', result); // eslint-disable-line
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      this.polyline = new globalThis.google.maps.Polyline(_objectSpread2({
        map: this.getMap()
      }, this._options));
      this.polyline.addListener('click', function (e) {
        return _this2.$emit('click', e);
      });
      this.polyline.addListener('dblclick', function (e) {
        return _this2.$emit('double-click', e);
      });
      this.polyline.addListener('dragend', function (e) {
        return _this2.$emit('drag-end', e);
      });
      this.polyline.addListener('dragstart', function (e) {
        return _this2.$emit('drag-start', e);
      });
      this.polyline.addListener('rightclick', function (e) {
        return _this2.$emit('right-click', e);
      }); // NOTE: path events insert_at and set_at only fired once so mouse up was more reliable (but mouse up doesn't trigger for remove event)

      this.polyline.addListener('mouseup', function () {
        return _this2.changedPath();
      });
      this.polyline.getPath().addListener('remove_at', function () {
        return _this2.changedPath();
      }); // TODO: Remove in major release

      this.polyline.addListener('dblclick', function (e) {
        return _this2.$emit('doubleClick', e);
      }); // eslint-disable-line

      this.polyline.addListener('dragend', function (e) {
        return _this2.$emit('dragEnd', e);
      }); // eslint-disable-line

      this.polyline.addListener('dragstart', function (e) {
        return _this2.$emit('dragStart', e);
      }); // eslint-disable-line

      this.polyline.addListener('rightclick', function (e) {
        return _this2.$emit('rightClick', e);
      }); // eslint-disable-line
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.polyline) this.polyline.setMap(null);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsPolyline;
}(vuePropertyDecorator.Vue), (_descriptor$3 = _applyDecoratedDescriptor(_class2$3.prototype, "getMap", [_dec$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$3 = _applyDecoratedDescriptor(_class2$3.prototype, "options", [_dec2$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$3 = _applyDecoratedDescriptor(_class2$3.prototype, "clickable", [_dec3$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4$3 = _applyDecoratedDescriptor(_class2$3.prototype, "draggable", [_dec4$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor5$3 = _applyDecoratedDescriptor(_class2$3.prototype, "editable", [_dec5$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor6$2 = _applyDecoratedDescriptor(_class2$3.prototype, "icons", [_dec6$3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor7$2 = _applyDecoratedDescriptor(_class2$3.prototype, "geodesic", [_dec7$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor8$2 = _applyDecoratedDescriptor(_class2$3.prototype, "path", [_dec8$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor9$1 = _applyDecoratedDescriptor(_class2$3.prototype, "strokeColor", [_dec9$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor10$1 = _applyDecoratedDescriptor(_class2$3.prototype, "strokeOpacity", [_dec10$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor11$1 = _applyDecoratedDescriptor(_class2$3.prototype, "strokeWeight", [_dec11$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor12$1 = _applyDecoratedDescriptor(_class2$3.prototype, "visible", [_dec12$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor13$1 = _applyDecoratedDescriptor(_class2$3.prototype, "zIndex", [_dec13$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$3.prototype, "_optionsChanged", [_dec14$1], Object.getOwnPropertyDescriptor(_class2$3.prototype, "_optionsChanged"), _class2$3.prototype)), _class2$3)) || _class$3);var _dec$2, _dec2$2, _dec3$2, _dec4$2, _dec5$2, _dec6$2, _class$2, _class2$2, _descriptor$2, _descriptor2$2, _descriptor3$2, _descriptor4$2, _descriptor5$2;
var GmapsPopup = (_dec$2 = vuePropertyDecorator.Inject('getMap'), _dec2$2 = vuePropertyDecorator.Prop({
  required: true
}), _dec3$2 = vuePropertyDecorator.Prop({
  default: '#EEEEEE'
}), _dec4$2 = vuePropertyDecorator.Prop({
  default: '200px'
}), _dec5$2 = vuePropertyDecorator.Prop({
  default: '60px'
}), _dec6$2 = vuePropertyDecorator.Watch('position', {
  deep: true
}), vuePropertyDecorator.Component(_class$2 = (_class2$2 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsPopup, _Vue);

  var _super = _createSuper(GmapsPopup);

  function GmapsPopup() {
    var _this;

    _classCallCheck(this, GmapsPopup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsPopup');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "position", _descriptor2$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "background", _descriptor3$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "width", _descriptor4$2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "height", _descriptor5$2, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "popup", void 0);

    return _this;
  }

  _createClass(GmapsPopup, [{
    key: "positionChanged",
    value: function positionChanged(newVal) {
      if (this.popup) this.popup.setPosition(newVal);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var Popup = createPopupClass();
      this.popup = new Popup(this.position, this.$el);
      if (this.popup) this.popup.setMap(this.getMap());
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.popup) this.popup.setMap(null);
    }
  }]);

  return GmapsPopup;
}(vuePropertyDecorator.Vue), (_descriptor$2 = _applyDecoratedDescriptor(_class2$2.prototype, "getMap", [_dec$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$2 = _applyDecoratedDescriptor(_class2$2.prototype, "position", [_dec2$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$2 = _applyDecoratedDescriptor(_class2$2.prototype, "background", [_dec3$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4$2 = _applyDecoratedDescriptor(_class2$2.prototype, "width", [_dec4$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor5$2 = _applyDecoratedDescriptor(_class2$2.prototype, "height", [_dec5$2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$2.prototype, "positionChanged", [_dec6$2], Object.getOwnPropertyDescriptor(_class2$2.prototype, "positionChanged"), _class2$2.prototype)), _class2$2)) || _class$2);/* script */
var __vue_script__ = GmapsPopup;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    staticClass: "gmaps-popup-container",
    on: {
      "click": function click($event) {
        $event.preventDefault();
        return _vm.$emit('click');
      }
    }
  }, [_vm._ssrNode("<div class=\"gmaps-popup-bubble-anchor\"" + _vm._ssrStyle(null, "color: " + _vm.background + ";", null) + ">", "</div>", [_vm._ssrNode("<div class=\"gmaps-popup-bubble\"" + _vm._ssrStyle(null, {
    background: _vm.background,
    maxWidth: _vm.width,
    maxHeight: _vm.height
  }, null) + ">", "</div>", [_vm._t("default")], 2)])]);
};

var __vue_staticRenderFns__ = [];
/* style */

var __vue_inject_styles__ = function __vue_inject_styles__(inject) {
  if (!inject) return;
  inject("data-v-5627b1f1_0", {
    source: ".gmaps-popup-bubble{border-radius:5px;box-shadow:0 3px 10px 1px rgba(0,0,0,.5);color:#444;cursor:pointer;font-family:sans-serif;left:0;overflow-y:auto;padding:5px;position:absolute;top:0;transform:translate(-50%,-100%)}.gmaps-popup-bubble-anchor{bottom:8px;left:0;position:absolute;width:100%}.gmaps-popup-bubble-anchor::after{border-left:6px solid transparent;border-right:6px solid transparent;border-top:8px solid;border-top-color:inherit!important;content:\"\";height:0;left:0;position:absolute;top:-1px;transform:translate(-50%,0);width:0;cursor:pointer}.gmaps-popup-container{cursor:auto;height:0;position:absolute;width:100%}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


var __vue_scope_id__ = undefined;
/* module identifier */

var __vue_module_identifier__ = "data-v-5627b1f1";
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject shadow dom */

var __vue_component__ = /*#__PURE__*/normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, createInjectorSSR, undefined);var _dec$1, _dec2$1, _dec3$1, _dec4$1, _dec5$1, _dec6$1, _dec7$1, _dec8$1, _dec9$1, _class$1, _class2$1, _descriptor$1, _descriptor2$1, _descriptor3$1, _descriptor4$1, _descriptor5$1, _descriptor6$1, _descriptor7$1, _descriptor8$1;
var GmapsHeatmap = (_dec$1 = vuePropertyDecorator.Inject('getMap'), _dec2$1 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec3$1 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec4$1 = vuePropertyDecorator.Prop({
  default: 0.6
}), _dec5$1 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec6$1 = vuePropertyDecorator.Prop({
  required: true
}), _dec7$1 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec8$1 = vuePropertyDecorator.Prop({
  default: undefined
}), _dec9$1 = vuePropertyDecorator.Watch('_options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class$1 = (_class2$1 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsHeatmap, _Vue);

  var _super = _createSuper(GmapsHeatmap);

  function GmapsHeatmap() {
    var _this;

    _classCallCheck(this, GmapsHeatmap);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsHeatmap');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "dissipating", _descriptor2$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "maxIntensity", _descriptor3$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "opacity", _descriptor4$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "radius", _descriptor5$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "items", _descriptor6$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "colors", _descriptor7$1, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "weightProp", _descriptor8$1, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "heatmap", void 0);

    return _this;
  }

  _createClass(GmapsHeatmap, [{
    key: "getData",
    value: function getData() {
      var _this2 = this;

      return this.items.map(function (e) {
        if (_this2.weightProp) return {
          location: new globalThis.google.maps.LatLng(e.lat, e.lng),
          // TODO: No idea how to remove this any
          weight: e[_this2.weightProp]
        };
        return new globalThis.google.maps.LatLng(e.lat, e.lng);
      });
    }
  }, {
    key: "updateData",
    value: function updateData() {
      if (this.heatmap) this.heatmap.setData(this.getData());
    }
  }, {
    key: "_options",
    get: function get() {
      var options = {
        data: this.getData()
      };
      if (this.colors) options.gradient = this.colors;
      if (this.dissipating) options.dissipating = this.dissipating;
      if (this.maxIntensity) options.maxIntensity = +this.maxIntensity;
      if (this.opacity) options.opacity = +this.opacity;
      if (this.radius) options.radius = +this.radius;
      return options;
    }
  }, {
    key: "_optionsChanged",
    value: function _optionsChanged(newVal) {
      if (this.heatmap) this.heatmap.setOptions(newVal);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.heatmap = new globalThis.google.maps.visualization.HeatmapLayer(_objectSpread2({
        map: this.getMap()
      }, this._options));
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.heatmap) this.heatmap.setMap(null);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsHeatmap;
}(vuePropertyDecorator.Vue), (_descriptor$1 = _applyDecoratedDescriptor(_class2$1.prototype, "getMap", [_dec$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2$1 = _applyDecoratedDescriptor(_class2$1.prototype, "dissipating", [_dec2$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3$1 = _applyDecoratedDescriptor(_class2$1.prototype, "maxIntensity", [_dec3$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4$1 = _applyDecoratedDescriptor(_class2$1.prototype, "opacity", [_dec4$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor5$1 = _applyDecoratedDescriptor(_class2$1.prototype, "radius", [_dec5$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor6$1 = _applyDecoratedDescriptor(_class2$1.prototype, "items", [_dec6$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor7$1 = _applyDecoratedDescriptor(_class2$1.prototype, "colors", [_dec7$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor8$1 = _applyDecoratedDescriptor(_class2$1.prototype, "weightProp", [_dec8$1], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2$1.prototype, "_optionsChanged", [_dec9$1], Object.getOwnPropertyDescriptor(_class2$1.prototype, "_optionsChanged"), _class2$1.prototype)), _class2$1)) || _class$1);var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14;
var GmapsRectangle = (_dec = vuePropertyDecorator.Inject('getMap'), _dec2 = vuePropertyDecorator.Prop({
  default: 0.001
}), _dec3 = vuePropertyDecorator.Prop({
  required: true
}), _dec4 = vuePropertyDecorator.Prop({
  default: true
}), _dec5 = vuePropertyDecorator.Prop({
  default: false
}), _dec6 = vuePropertyDecorator.Prop({
  default: false
}), _dec7 = vuePropertyDecorator.Prop({
  default: 'black'
}), _dec8 = vuePropertyDecorator.Prop({
  default: 0.3
}), _dec9 = vuePropertyDecorator.Prop({
  default: 'black'
}), _dec10 = vuePropertyDecorator.Prop({
  default: 1.0
}), _dec11 = vuePropertyDecorator.Prop({
  default: 0
}), _dec12 = vuePropertyDecorator.Prop({
  default: 3
}), _dec13 = vuePropertyDecorator.Prop({
  default: true
}), _dec14 = vuePropertyDecorator.Prop({
  default: 0
}), _dec15 = vuePropertyDecorator.Watch('_options', {
  immediate: true,
  deep: true
}), vuePropertyDecorator.Component(_class = (_class2 = /*#__PURE__*/function (_Vue) {
  _inherits(GmapsRectangle, _Vue);

  var _super = _createSuper(GmapsRectangle);

  function GmapsRectangle() {
    var _this;

    _classCallCheck(this, GmapsRectangle);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "name", 'gmapsRectangle');

    _initializerDefineProperty(_assertThisInitialized(_this), "getMap", _descriptor, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "sensitivity", _descriptor2, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "bounds", _descriptor3, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "clickable", _descriptor4, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "draggable", _descriptor5, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "editable", _descriptor6, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "fillColor", _descriptor7, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "fillOpacity", _descriptor8, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeColor", _descriptor9, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeOpacity", _descriptor10, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokePosition", _descriptor11, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "strokeWeight", _descriptor12, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "visible", _descriptor13, _assertThisInitialized(_this));

    _initializerDefineProperty(_assertThisInitialized(_this), "zIndex", _descriptor14, _assertThisInitialized(_this));

    _defineProperty(_assertThisInitialized(_this), "rectangle", void 0);

    _defineProperty(_assertThisInitialized(_this), "tempBounds", _this.bounds);

    return _this;
  }

  _createClass(GmapsRectangle, [{
    key: "_options",
    get: function get() {
      return {
        bounds: this.bounds,
        clickable: this.clickable,
        draggable: this.draggable,
        editable: this.editable,
        fillColor: this.fillColor,
        fillOpacity: +this.fillOpacity,
        strokeColor: this.strokeColor,
        strokeOpacity: +this.strokeOpacity,
        strokePosition: +this.strokePosition,
        strokeWeight: +this.strokeWeight,
        visible: this.visible,
        zIndex: +this.zIndex
      };
    }
  }, {
    key: "_optionsChanged",
    value: function _optionsChanged(newVal) {
      if (this.rectangle) this.rectangle.setOptions(newVal);
    }
  }, {
    key: "changedBounds",
    value: function changedBounds() {
      if (!this.rectangle) return; // This is fired when the component is replaced and may not have a tempBounds

      var oldBounds = this.tempBounds || {
        north: -1,
        south: -1,
        east: -1,
        west: -1
      };
      var newBounds = this.rectangle.getBounds().toJSON();

      if (Math.abs(newBounds.north - oldBounds.north) > this.sensitivity || Math.abs(newBounds.south - oldBounds.south) > this.sensitivity || Math.abs(newBounds.east - oldBounds.east) > this.sensitivity || Math.abs(newBounds.west - oldBounds.west) > this.sensitivity) {
        this.tempBounds = newBounds;
        this.$emit('bounds-changed', newBounds); // TODO: Remove in major release

        this.$emit('boundsChanged', newBounds); // eslint-disable-line
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      this.rectangle = new globalThis.google.maps.Rectangle(_objectSpread2({
        map: this.getMap()
      }, this._options));
      this.rectangle.addListener('bounds_changed', function () {
        return _this2.changedBounds();
      });
      this.rectangle.addListener('click', function (e) {
        return _this2.$emit('click', e);
      });
      this.rectangle.addListener('dblclick', function (e) {
        return _this2.$emit('double-click', e);
      });
      this.rectangle.addListener('drag', function (e) {
        return _this2.$emit('drag', e.latLng ? e.latLng.toJSON() : null);
      });
      this.rectangle.addListener('dragend', function (e) {
        return _this2.$emit('drag-end', e.latLng ? e.latLng.toJSON() : null);
      });
      this.rectangle.addListener('dragstart', function (e) {
        return _this2.$emit('drag-start', e.latLng ? e.latLng.toJSON() : null);
      });
      this.rectangle.addListener('mouseover', function (e) {
        return _this2.$emit('mouseover', e);
      });
      this.rectangle.addListener('rightclick', function (e) {
        return _this2.$emit('right-click', e);
      }); // TODO: Remove in major release

      this.rectangle.addListener('dblclick', function (e) {
        return _this2.$emit('doubleClick', e);
      }); // eslint-disable-line

      this.rectangle.addListener('dragend', function (e) {
        return _this2.$emit('dragEnd', e.latLng ? e.latLng.toJSON() : null);
      }); // eslint-disable-line

      this.rectangle.addListener('dragstart', function (e) {
        return _this2.$emit('dragStart', e.latLng ? e.latLng.toJSON() : null);
      }); // eslint-disable-line

      this.rectangle.addListener('rightclick', function (e) {
        return _this2.$emit('rightClick', e);
      }); // eslint-disable-line
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.rectangle) this.rectangle.setMap(null);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return GmapsRectangle;
}(vuePropertyDecorator.Vue), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "getMap", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "sensitivity", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "bounds", [_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "clickable", [_dec4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "draggable", [_dec5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "editable", [_dec6], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "fillColor", [_dec7], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "fillOpacity", [_dec8], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "strokeColor", [_dec9], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "strokeOpacity", [_dec10], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "strokePosition", [_dec11], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "strokeWeight", [_dec12], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec13], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "zIndex", [_dec14], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2.prototype, "_optionsChanged", [_dec15], Object.getOwnPropertyDescriptor(_class2.prototype, "_optionsChanged"), _class2.prototype)), _class2)) || _class);// install function executed by Vue.use()
var install = function installX5Gmaps(Vue, options) {
  if (!options) throw new Error("x5-gmaps :: (Google API) 'key' is required for plugin install.");
  if (typeof options === 'string') init({
    key: options,
    libraries: []
  });else init(options);

  Vue.prototype.$GMaps = function () {
    return gmaps;
  };
};var components=/*#__PURE__*/Object.freeze({__proto__:null,install: install,gmaps: gmaps,gmapsMap: __vue_component__$3,gmapsCircle: GmapsCircle,gmapsCluster: __vue_component__$1,gmapsData: GmapsData,gmapsDataGeoJson: GmapsDataGeoJson,gmapsHeatmap: GmapsHeatmap,gmapsInfoWindow: GmapsInfoWindow,gmapsMarker: GmapsMarker,gmapsPolygon: GmapsPolygon,gmapsPolyline: GmapsPolyline,gmapsPopup: __vue_component__,gmapsRectangle: GmapsRectangle,'default': install});// only expose one global var, with component exports exposed as properties of
// that global var (eg. plugin.component)

Object.entries(components).forEach(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      componentName = _ref2[0],
      component = _ref2[1];

  if (componentName !== 'default') {
    var key = componentName;
    var val = component;
    install[key] = val;
  }
});module.exports=install;