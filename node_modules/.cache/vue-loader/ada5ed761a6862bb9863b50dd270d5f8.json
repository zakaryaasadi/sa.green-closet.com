{"remainingRequest":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Web Projects\\sa.green-closet.com\\src\\views\\main\\index.vue?vue&type=template&id=567ae6d4&scoped=true&","dependencies":[{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\src\\views\\main\\index.vue","mtime":1689264015850},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655981863969},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655981866113},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655981863969},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\vue-loader\\lib\\index.js","mtime":1655981865577}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}