{"remainingRequest":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Web Projects\\sa.green-closet.com\\src\\views\\en-main\\index.vue?vue&type=template&id=69fec8f6&scoped=true&","dependencies":[{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\src\\views\\en-main\\index.vue","mtime":1689264681737},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655981863969},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655981866113},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655981863969},{"path":"D:\\Projects\\Web Projects\\sa.green-closet.com\\node_modules\\vue-loader\\lib\\index.js","mtime":1655981865577}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}